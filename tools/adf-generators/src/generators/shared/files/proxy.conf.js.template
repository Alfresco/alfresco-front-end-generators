const ecmHost = "";
const bpmHost = "";

module.exports = {
    <% if(template == 'acs' || template == 'acs-aps' || template == 'acs-apa') { %>
    "/alfresco": {
      "target": ecmHost,
      "secure": false,
      "changeOrigin": true,
      "pathRewrite": {
        "^/alfresco/alfresco": ""
      },
      onProxyReq: function(request) {
          if(request["method"] !== "GET")
          request.setHeader("origin", ecmHost);
        },
      onProxyRes: function (proxyRes) {
        const header = proxyRes.headers['www-authenticate'];
        if (header?.startsWith('Basic')) {
            proxyRes.headers['www-authenticate'] = 'x' + header;
        }
      }
    },
    <% } %>
    <% if(template == 'aps' || template == 'acs-aps') { %>
    "/activiti-app": {
      "target": bpmHost,
      "secure": false,
      "changeOrigin": true,
      onProxyReq: function(request) {
        if(request["method"] !== "GET")
          request.setHeader("origin", bpmHost);
      }
    },
    <% } %>
    <% if(authType == 'OAUTH') { %>
    '/auth': {
      "target": <% if(template == 'acs' || template == 'acs-aps' || template == 'acs-apa') { %>ecmHost<% } else { %>bpmHost<% } %>,
      "secure": false,
      "changeOrigin": true,
    },
    <% } %>
    <% if(template == 'apa' || template == 'acs-apa' || template == 'automate') { %>
    "/auth/admin/realms/myrealm": {
        "target": bpmHost,
        "secure": false,
        "pathRewrite": {
            "^/auth/admin/realms/myrealm": ""
        },
        "changeOrigin": true,
        "logLevel": "debug"
    },
    "/auth/realms/myrealm": {
        "target": bpmHost,
        "secure": false,
        "pathRewrite": {
            "^/auth/realms/myrealm": ""
        },
        "changeOrigin": true,
        "logLevel": "debug"
    },
    "/": {
        "target": bpmHost,
        "secure": false,
        "changeOrigin": true,
        "logLevel": "debug"
    },
    <% } %>
    <% if(template == 'automate') { %>
    "/api": {
      target: ecmHost,
      logLevel: "debug",
      secure: false
    }
    <% } %>
};
